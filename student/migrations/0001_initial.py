# Generated by Django 5.0.6 on 2025-01-28 06:56

import django.db.models.deletion
import student.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("online_learning_platform", "0001_initial"),
        ("teacher", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ContentAttending",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_time", models.DateTimeField(auto_now_add=True)),
                ("complete_time", models.DateTimeField(null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "content",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="teacher.content",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="online_learning_platform.student",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ExamResult",
            fields=[
                (
                    "contentattending_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="student.contentattending",
                    ),
                ),
                ("high_score", models.IntegerField(null=True)),
            ],
            bases=("student.contentattending",),
        ),
        migrations.CreateModel(
            name="CourseAttending",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_time", models.DateTimeField(auto_now_add=True)),
                ("complete_time", models.DateTimeField(null=True)),
                (
                    "five_stage_rating",
                    models.IntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)],
                        null=True,
                        verbose_name="５段階評価",
                    ),
                ),
                ("feedback", models.TextField(null=True, verbose_name="感想")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="teacher.course",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="online_learning_platform.student",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CoursePurchase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("purchase_date", models.DateField(auto_now_add=True)),
                ("purchase_price", models.IntegerField()),
                (
                    "flag",
                    models.BooleanField(
                        validators=[student.models.CoursePurchase.validate_true]
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "coupon",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="teacher.coupon",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="teacher.course",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="online_learning_platform.student",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "question_title",
                    models.CharField(max_length=15, verbose_name="質問タイトル"),
                ),
                ("question_text", models.TextField(verbose_name="質問文")),
                ("question_time", models.DateTimeField(auto_now_add=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "content",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="teacher.content",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="online_learning_platform.student",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("comment_text", models.TextField(verbose_name="コメント文")),
                ("comment_time", models.DateTimeField(auto_now_add=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "question",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comment_set",
                        to="student.question",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SectionAttending",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_time", models.DateTimeField(auto_now_add=True)),
                ("complete_time", models.DateTimeField(null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "section",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="teacher.section",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="online_learning_platform.student",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ExamResultHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("exam_execution_time", models.DateTimeField(auto_now_add=True)),
                ("total_score", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "result",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="student.examresult",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ExamResultDetail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "choice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="teacher.examquestionchoice",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="teacher.examquestion",
                    ),
                ),
                (
                    "result",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="student.examresult",
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="contentattending",
            constraint=models.UniqueConstraint(
                fields=("student", "content"), name="unique_content_attending"
            ),
        ),
        migrations.AddConstraint(
            model_name="courseattending",
            constraint=models.UniqueConstraint(
                fields=("student", "course"), name="unique_course_attending"
            ),
        ),
        migrations.AddConstraint(
            model_name="coursepurchase",
            constraint=models.UniqueConstraint(
                fields=("course", "student"), name="unique_course_purchase"
            ),
        ),
        migrations.AddConstraint(
            model_name="sectionattending",
            constraint=models.UniqueConstraint(
                fields=("student", "section"), name="unique_section_attending"
            ),
        ),
        migrations.AddConstraint(
            model_name="examresulthistory",
            constraint=models.UniqueConstraint(
                fields=("result", "exam_execution_time"),
                name="unique_exam_result_history",
            ),
        ),
        migrations.AddConstraint(
            model_name="examresultdetail",
            constraint=models.UniqueConstraint(
                fields=("result", "question"), name="unique_exam_result_detail"
            ),
        ),
    ]
