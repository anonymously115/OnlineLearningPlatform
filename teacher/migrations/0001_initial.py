# Generated by Django 5.0.6 on 2025-01-28 06:56

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("online_learning_platform", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Content",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content_no", models.IntegerField()),
                (
                    "content_name",
                    models.CharField(max_length=15, verbose_name="コンテンツ名"),
                ),
                ("content_flag", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ExamQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question_no", models.IntegerField()),
                ("question_text", models.TextField(verbose_name="設問文")),
                (
                    "score",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="配点",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Examination",
            fields=[
                (
                    "content_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="teacher.content",
                    ),
                ),
                (
                    "answer_limit_time",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="解答制限時間",
                    ),
                ),
            ],
            bases=("teacher.content",),
        ),
        migrations.CreateModel(
            name="LectureVideo",
            fields=[
                (
                    "content_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="teacher.content",
                    ),
                ),
                (
                    "lecture_time",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="講義時間",
                    ),
                ),
            ],
            bases=("teacher.content",),
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "course_name",
                    models.CharField(max_length=15, verbose_name="コース名"),
                ),
                (
                    "standard_price",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="標準価格",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="online_learning_platform.teacher",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Coupon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "discount_rate",
                    models.DecimalField(
                        blank=True,
                        decimal_places=16,
                        max_digits=18,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="割引率(％)",
                    ),
                ),
                (
                    "discount_amount",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="値引額",
                    ),
                ),
                (
                    "applying_start_date",
                    models.DateField(verbose_name="適用開始年月日(Y-m-d)"),
                ),
                (
                    "applying_end_date",
                    models.DateField(verbose_name="適用終了年月日(Y-m-d)"),
                ),
                (
                    "available_count",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1000),
                        ],
                        verbose_name="使用可能人数",
                    ),
                ),
                ("coupon_issuing_date", models.DateField(auto_now_add=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="teacher.course"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ExamQuestionChoice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("choice_no", models.IntegerField()),
                ("choice_text", models.TextField(verbose_name="選択文")),
                ("correct_answer_flag", models.BooleanField(verbose_name="正解フラグ")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="teacher.examquestion",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Section",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("section_no", models.IntegerField()),
                (
                    "section_name",
                    models.CharField(max_length=15, verbose_name="セクション名"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="teacher.course"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="content",
            name="section",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="teacher.section"
            ),
        ),
        migrations.AddField(
            model_name="examquestion",
            name="exam",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="teacher.examination"
            ),
        ),
        migrations.AddConstraint(
            model_name="examquestionchoice",
            constraint=models.UniqueConstraint(
                fields=("question", "choice_no"), name="unique_exam_question_choice"
            ),
        ),
        migrations.AddConstraint(
            model_name="section",
            constraint=models.UniqueConstraint(
                fields=("course", "section_no"), name="unique_section"
            ),
        ),
        migrations.AddConstraint(
            model_name="content",
            constraint=models.UniqueConstraint(
                fields=("section", "content_no"), name="unique_content"
            ),
        ),
        migrations.AddConstraint(
            model_name="examquestion",
            constraint=models.UniqueConstraint(
                fields=("exam", "question_no"), name="unique_exam_question"
            ),
        ),
    ]
